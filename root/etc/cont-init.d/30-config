#!/usr/bin/with-contenv bash

mkdir -p /config/{extensions,data,workspace,.ssh}

if [ -n "${SUDO_PASSWORD}" ] || [ -n "${SUDO_PASSWORD_HASH}" ]; then
    echo "setting up sudo access"
    
    if ! grep -q 'darkvoid' /etc/sudoers; then
        echo "adding darkvoid to sudoers"
        echo "darkvoid ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
    fi
    
    if [ -n "${SUDO_PASSWORD_HASH}" ]; then
        echo "setting sudo password using sudo password hash"
        sed -i "s|^darkvoid:\!:|darkvoid:${SUDO_PASSWORD_HASH}:|" /etc/shadow
    else
        echo "setting sudo password using SUDO_PASSWORD env var"
        echo -e "${SUDO_PASSWORD}\n${SUDO_PASSWORD}" | passwd darkvoid
    fi
fi

touch /root/.terminal
echo "source /root/.terminal" >> /root/.bashrc
echo "source /root/.terminal" >> /root/.profile

[[ ! -f /config/.bashrc ]] && \
    cp /root/.bashrc /config/.bashrc
[[ ! -f /config/.profile ]] && \
    cp /root/.profile /config/.profile

# permissions
if [ -f "/usr/bin/find" ] && [ -f "/usr/bin/xargs" ]; then
    CORES=$(nproc --all)

    # Split workload between config and workspace
    echo "setting permissions::configuration"
    find /config -path /config/workspace -prune -false -o -type d -print0 | \
        xargs --null -r --max-args=1 --max-procs=$((CORES*2*8)) \
        chown -R darkvoid:darkvoid

    echo "setting permissions::workspace"
    chown darkvoid:darkvoid /config/workspace
else
    # Set permissions on data mount
    # do not decend into the workspace
    chown -R darkvoid:darkvoid "$(ls /config -I workspace)"
    chown darkvoid:darkvoid /config/workspace
fi
